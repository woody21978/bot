require('dotenv').config();
var fetch = typeof window !== 'undefined' ? window.fetch : require('node-fetch');
const { Telegraf } = require('telegraf');
const session = require('telegraf/session');
const bot = new Telegraf(process.env.BOT_TOKEN);
const hostAPI = 'http://185.104.114.240/';
const phoneQiwi = '+79853317686';

bot.use(session());

async function getData(url) {
  let data;
  await fetch(url)
    .then((res) => res.text())
    .then((body) => {
      data = body;
    });
  return data;
}

const catalogMenu = Telegraf.Extra.markdown().markup((m) =>
  m.inlineKeyboard([
    [m.callbackButton('SPAR', 'catalog:spar')]
  ])
);

bot.on('callback_query', (ctx) => {
  let data = ctx.callbackQuery.data;
  console.log(data);
  if(data.indexOf('get') !== -1){
    getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
        let s = data.split(':')[1];
        switch(data.split(':').length){
         case 2:
            if(s === 'spar'){
            ctx.editMessageText('–≤–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω –∫–∞–∫ –ø—Ä–∏–º–µ—Ä–µ n-n');
            ctx.session.action = `getData&mag=${s}`;
          }
          break;
        }
      }
    }
    });
  }
  if (data.indexOf('catalog') !== -1) {
    function ucFirst(str) {
      if (!str) return str;
      return str[0].toUpperCase() + str.slice(1);
    }
    let nameShop = data.split(':')[1];

    switch (data.split(':').length) {
      case 1:
        ctx.editMessageText('–ö–∞—Ç–∞–ª–æ–≥', catalogMenu);
        break;
      case 2:
        getData(`${hostAPI}?action=get${ucFirst(nameShop)}`).then((res) => {
          if(res !== ''){ 
          const info = JSON.parse(res);
          if (typeof info === 'object') {
  
            switch(nameShop){
            case 'spar':
              info.sort((current, next) => {
                if (current.category_index < next.category_index) {
                  return -1;
                }
               });
              const sparMenu = Telegraf.Extra.markdown().markup((m) => {
              let list = [];
              info.forEach((currentValue, index) => {
                list.push([]);
                list[index].push(
                  m.callbackButton(
                    `SPAR ${currentValue.category_info.from} - ${currentValue.category_info.to} –±–æ–Ω—É—Å–æ–≤ | ${currentValue.category_info.price} ‚ÇΩ | ${currentValue.count} —à—Ç`,
                    `catalog:spar:${currentValue.category_index}`
                  )
                );
              });
              list.push([]);
              list[list.length - 1].push(m.callbackButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'catalog'));
              return m.inlineKeyboard(list);
            });

            let title;
            if (info.length === 0) {
              title = '–¢–æ–≤–∞—Ä –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
            } else {
              title = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é';
            }
            ctx.editMessageText(title, sparMenu);
            break;
            case 'mac':
              
            break;
          }
          }
        }
        });
        break;
      case 3:
        getData(`${hostAPI}?action=get${ucFirst(nameShop)}&category_id=${data.split(':')[2]}`).then((res) => {
          if (typeof JSON.parse(res) === 'object') {
            let info = JSON.parse(res);
            let numCategory = data.split(':')[2];
            const QShopmenu = Telegraf.Extra.markdown().markup((m) => {
              let list = [];
              let length;
              info.count > 10 ? (length = 10) : (length = info.count);
              for (let index = 0; index < length; index++) {
                list.push([]);
                list[index].push(m.callbackButton(`${index + 1} —à—Ç`, `catalog:spar:${numCategory}:${index + 1}`));
              }
              list.push([]);
              list[list.length - 1].push(m.callbackButton('‚¨Ö –ù–∞–∑–∞–¥', 'catalog:spar'));
              return m.inlineKeyboard(list);
            });

            ctx.editMessageText('–°–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –≤—ã –∫—É–ø–∏—Ç–µ?', QShopmenu);
          }
        });
        break;
      case 4:
        const buttons = Telegraf.Extra.markdown().markup((m) =>
          m.inlineKeyboard([
            [m.callbackButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é', `${data}:yes`)],
            [m.callbackButton('‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é', `catalog`)],
          ])
        );
        let text = `***–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–∫—É–ø–∫—É***
–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—è –ø–æ–∫—É–ø–∫—É –≤—ã —Ç–∞–∫–∂–µ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏`;
        ctx.editMessageText(text, buttons);
        break;
      case 5:
        if (data.split(':')[4] === 'yes') {
          getData(
            `http://185.104.114.240/?action=buy&shop=${data.split(':')[1]}&cat=${data.split(':')[2]}&q=${
            data.split(':')[3]
            }&tg_id=${ctx.update.callback_query.from.id}`
          ).then((res) => {
            if (res !== '') {
              let dataParse = JSON.parse(res);
              if (typeof dataParse === 'object') {
                console.log(data.split(':'));
                let textTemplate = ``;
                switch (data.split(':')[1]) {
                  case 'spar':
                    for (let i = 0; i < dataParse.length; i++) {
                      let item = dataParse[i];
                      textTemplate += `
***–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞***
 ${item.login} : ${item.pass}
 –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–Ω—É—Å–æ–≤: ${item.bonus_count}
 ${item.card_num}
            `;
                    }
                    break;
                }
                ctx.editMessageText(textTemplate);
              } else {
                let errorText = '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤';
                ctx.reply(errorText);
              }
            }
          });
        }
        break;
    }
  }

  if (data.indexOf('payment:check') === 0) {
    getData(`http://185.104.114.240/?action=checkCode&code=${data.split(':')[2]}`).then((res) => {
      if (res !== '') {
        let info = JSON.parse(res);
        if (info.status) {
          let text = `–ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${info.sum} —Ä—É–±.`;
          ctx.editMessageText(text);
        }
      } else {
        ctx.reply('–ë–∞–ª–∞–Ω—Å –Ω–µ –ø–æ–ø–æ–ª–Ω–µ–Ω');
      }
    });
  }
  if(data.indexOf('del') !== -1){
    switch(data.split(':').length){
      case 2:
        ctx.editMessageText('–í–≤–µ–¥–∏—Ç–µ del:id –∞ —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≤–≤–µ–¥–∏—Ç–µ del:all')
        ctx.session.action = `del&${data.split(':')[1]}`
      break;
    }
  }
});

const mainMenu = Telegraf.Extra.markdown().markup((m) =>
  m
    .keyboard([
      [m.callbackButton('üõí –ö–∞—Ç–∞–ª–æ–≥'), m.callbackButton('üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')],
      [m.callbackButton('üë§ –ü—Ä–æ—Ñ–∏–ª—å'), m.callbackButton('üìñ –ü—Ä–∞–≤–∏–ª–∞')],
      [m.callbackButton('–ü–æ–º–æ—â—å')],
    ])
    .resize()
);

bot.start((ctx) => {
  ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', mainMenu);
});

bot.command('admin', (ctx) => {
  getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
        const adminMenu = Telegraf.Extra.markdown().markup((m) =>
          m.keyboard([
            [m.callbackButton('–î–æ–±–∞–≤–∏—Ç—å SPAR'), m.callbackButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º –≤ –±–æ—Ç–µ')],
            [m.callbackButton('–ü–æ–ª—É—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã'),m.callbackButton('–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å user')],
            [m.callbackButton('–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞'),m.callbackButton('–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')],
            [m.callbackButton('–û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∞–¥–º–∏–Ω–∫–µ')]
          ]).resize()
        );
        ctx.reply('–ê–¥–º–∏–Ω –º–µ–Ω—é', adminMenu);
      }
    }
  });
});
bot.hears('–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', (ctx) => {
  getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
        const list = Telegraf.Extra.markdown().markup((m) =>
        m.inlineKeyboard([
          [m.callbackButton('SPAR', 'del:spar')]
        ])
        )
        ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä',list);
      }
    }
  });
});
bot.hears('–ü–æ–ª—É—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã', (ctx) => {
  getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
  const list = Telegraf.Extra.markdown().markup((m) =>
  m.inlineKeyboard([
    [m.callbackButton('SPAR', 'get:spar')]
  ])
);
ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä',list)
      }
    }
  })
});
bot.hears('–û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∞–¥–º–∏–Ω–∫–µ', (ctx) => {
  ctx.session.action = undefined;
  ctx.reply('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', mainMenu);
});
bot.hears('üõí –ö–∞—Ç–∞–ª–æ–≥', (ctx) => {
  ctx.reply('–ö–∞—Ç–∞–ª–æ–≥', catalogMenu);
});
bot.hears('–ü–æ–º–æ—â—å', (ctx) => {
  ctx.reply(`
  –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å —Å—é–¥–∞
  @sammyLuck`);
});
bot.hears('üìñ –ü—Ä–∞–≤–∏–ª–∞', (ctx) => {
  let text = `–í–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
  **–í–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω –≤ —Å–ª—É—á–∞–µ:
  
  - –ù–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –±–∞–ª–ª–æ–≤ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞. –ù–∞–ø—Ä–∏–º–µ—Ä –∫—É–ø–∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω 100-199, –∞ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –º–µ–Ω—å—à–µ 100 –±–æ–Ω—É—Å–æ–≤.
  - –ù–∞–ª–∏—á–∏–µ —á–µ–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞. 
  - –í–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ –ª–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç –±–æ—Ç–∞.
  =========================

  –ì–∞—Ä–∞–Ω—Ç–∏—è
   –°–ø–∏—Å–∞—Ç—å –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ 99.99—Ä –∑–∞ —á–µ–∫
  –ì–∞—Ä–∞–Ω—Ç–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–ª—É—á–∞–∏:
  - –ù–µ –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 1 —á–∞—Å–∞. 
  - –ò–º–µ–µ—Ç—Å—è —á–µ–∫ —Å –º–∞–≥–∞–∑–∏–Ω–∞.

  =========================
  –ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
  - –ù–µ –ø–∏—à–∏—Ç–µ: "–ü—Ä–∏–≤–µ—Ç", "–ö–∞–∫ –¥–µ–ª–∞?" –∏ —Ç –ø
  - –ù–µ –Ω–∞–¥–æ —Å–ø–∞–º–∏—Ç—å –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  –ï—Å–ª–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–∏ (–Ω–µ–≤–∞–ª–∏–¥, –∑–∞–º–µ–Ω–∞):
  - –ò–∑–ª–æ–∂–∏—Ç–µ —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º—ã
  - –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–∞ –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–∏ - –ß–µ–∫ –±–æ—Ç–∞.
  - –°–∫—Ä–∏–Ω—à–æ—Ç –±–∞–ª–∞–Ω—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞, –µ—Å–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–∞–ª–∞–Ω—Å`;
  ctx.reply(text);
});
bot.hears('–ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º –≤ –±–æ—Ç–µ', (ctx) => {
  getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
        ctx.session.action = 'messageAll';
        ctx.reply('–ü–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç');
      }
    }
  });
});
bot.hears('–ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å user', (ctx) => {
  getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
  ctx.reply('–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å–∞ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å tg_id:sum');
  ctx.session.action = 'editBalance';
      }
    }
  });
})
bot.hears('–î–æ–±–∞–≤–∏—Ç—å SPAR', (ctx) => {
  getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      if (JSON.parse(res).role === 'admin') {
        ctx.session.action = 'loadData';
        ctx.reply('–¢–µ–ø–µ—Ä—å –∫–∏–¥–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ');
      }
    }
  });
});
bot.hears('üë§ –ü—Ä–æ—Ñ–∏–ª—å', async (ctx) => {
  await getData(`http://185.104.114.240/?action=getUser&tg_id=${ctx.message.from.id}`).then((res) => {
    if (typeof JSON.parse(res) === 'object') {
      let infoText = `
<b>–ë–∞–ª–∞–Ω—Å</b>: <i>${JSON.parse(res).balance} —Ä—É–±.</i>\n
<b>–í–∞—à id</b>: <i>${ctx.message.from.id}</i>\n
<b>–í–∞—à–µ –∏–º—è</b>: <i>${ctx.message.from.first_name}</i>
    `;
      ctx.replyWithHTML(infoText);
    }
  });
});
bot.hears('üíµ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', async (ctx) => {
  let comment;
  await getData(`http://185.104.114.240/?action=getCode&tg_id=${ctx.message.from.id}`).then((res) => {
    comment = res;
  });
  const paymentMenu = Telegraf.Extra.markdown().markup((m) =>
    m.inlineKeyboard([
      [m.callbackButton('–Ø –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å ', `payment:check:${comment}`)],
      [
        m.urlButton(
          '–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ —Å—Å—ã–ª–∫–µ',
          `https://qiwi.com/payment/form/99?amountFraction=00&extra%5B%27account%27%5D=${phoneQiwi}&extra%5B%27comment%27%5D=${comment}&blocked[0]=comment&blocked[1]=account`
        ),
      ],
    ])
  );
  let text = `
  *–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞*
  –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω—É–∂–Ω–æ

  *1) –û–ø–ª–∞—Ç–∏—Ç—å –∑–∞–∫–∞–∑*
  QIWI –ø–æ –Ω–æ–º–µ—Ä—É *${phoneQiwi}* –∏ –≤–≤–µ—Å—Ç–∏ —ç—Ç–æ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π *${comment}*, –ª–∏–±–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø–æ —Å—Å—ã–ª–∫–µ"

  *2) –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–Ø –ø–æ–ø–æ–ª–Ω–∏–ª –±–∞–ª–∞–Ω—Å"*
   —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–µ–Ω–µ–≥
  `;
  ctx.replyWithHTML(text, paymentMenu);
});
bot.on('text', async (ctx) => {
  if(ctx.session.action !== undefined){
  if (ctx.session.action === 'loadData') {
    if (typeof JSON.parse(`[${ctx.message.text.substring(0, ctx.message.text.length - 1)}]`) === 'object') {
      let data = JSON.parse(`[${ctx.message.text.substring(0, ctx.message.text.length - 1)}]`);
      for (let i = 0; i < data.length; i++) {
        let url = encodeURI(
          `http://185.104.114.240/?action=loadData&type=text&card=${data[i].card_user}&pass=${data[i].pass}&login=${data[i].login}&bonus=${data[i].bonus_count}`
        );
        await getData(url);
      }
    } else {
      ctx.session.action = undefined;
    }
  }
  if (ctx.session.action === 'messageAll') {
    console.log(ctx.message.text.indexOf('/'));
      getData(`${hostAPI}?action=getTG_id`).then((res) => {
        if (typeof JSON.parse(res) === 'object') {
          let data = JSON.parse(res);
          for (let i = 0; i < data.length; i++) {
            ctx.telegram.sendMessage(data[i][0], ctx.message.text);
          }
        }
      });
    }
    if(ctx.session.action.indexOf('del') !== -1){
      let product = ctx.session.action.split('&')[1];
      let id = ctx.message.text.split(':')[1];
      if(id !== undefined){
         getData(`${hostAPI}?action=delete&id=${id}&product=${product}`).then(res => res !== '1' ? ctx.reply('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å') : ctx.reply('–í—Å–µ –ø—Ä–æ—à–ª–æ —É–¥–∞—á–Ω–æ'));
      }
    }
    if(ctx.session.action === 'editBalance'){
      let info = ctx.message.text.split(':');
      if(info.length === 2){
        getData(`${hostAPI}?action=editBalance&tg_id=${info[0]}&sum=${info[1]}`).then(res =>{
          res === '1' ? ctx.reply('–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω') : ctx.reply('–ë–∞–ª–∞–Ω—Å –Ω–µ –∏–∑–º–µ–Ω–µ–Ω')
        });
      }
    }
  if (ctx.session.action.indexOf('getData&mag') !== -1) {
     let nameShop = ctx.session.action.replace(`getData&mag=`,'');
     switch(nameShop){
       case 'spar':
        console.log(ctx.message.text.indexOf('-'));
         if(ctx.message.text.indexOf('-') !== -1){
          let range = ctx.message.text.split('-');

          await getData(`${hostAPI}?action=getDataAdmin&shop=${nameShop}&from=${range[0]}&to=${range[1]}`).then(res => {
            if(res !== '' && res !== undefined && typeof JSON.parse(res) === 'object'){
              let data = JSON.parse(res);
              let listText = '';
              let line = 0;
              ctx.reply('–î–∞–Ω–Ω—ã–µ –æ –∞–∫–∫–∞—É–Ω—Ç–∞—Ö');
              for(let i = 0; i < data.length; i++){
                listText += `id:${data[i].id}, login:${data[i].login}, pass:${data[i].pass}, –±–æ–Ω—É—Å–æ–≤: ${data[i].bonus_count}\n`;
                line++;
                if(line > 30){
                  ctx.reply(listText);
                  line = 0;
                  listText = '';
                }
                }
                if(data.length < 30){
                  ctx.reply(listText);
                }
                 
              }
          })

         }
       break;
     }
  }
}
  ctx.session.action = undefined;
});
bot.startPolling();
